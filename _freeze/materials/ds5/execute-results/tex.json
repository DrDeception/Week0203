{
  "hash": "58032e31c793024e22aa7258bb8a9bc9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Descriptive Statistics 5\"\nsubtitle: \"DataVizCheatSheet\"\nauthor: \"Dr. Gordon Wright\"\nformat:\n  pdf:\n    header-includes:\n      - \\usepackage{amsmath}\n  html:\n    math: true\n    code-overflow: wrap\neditor: visual\n---\n\n\n\n\n# **Data Visualization Cheat Sheet**\n\n## **1. Central Tendency (Mean, Median, Mode)**\n\nWhen exploring central tendency, you can use the following charts based\non the data type:\n\n| **Data Type** | **Chart Type** | **Best for** | **Description** |\n|----|----|----|----|\n| **Nominal** | Bar Chart | Mode | Displays the frequency of categories. |\n| **Ordinal** | Bar Chart | Median, Mode | Bars ordered by the rank of categories. |\n| **Interval** | Histogram | Mean, Median, Mode | Shows frequency distribution of values. |\n| **Interval/Ratio** | Box Plot (Box-and-Whisker) | Median, Range, Outliers | Displays median, quartiles, and outliers. |\n| **Ratio** | Histogram or Box Plot | Mean, Median, Mode | Shows frequency distribution or central range. |\n\n## **2. Measurement Types and Appropriate Charts**\n\nTo visually represent different data types, the following charts are\nmost commonly used:\n\n| **Data Type** | **Chart Type** | **Best for** | **Description** |\n|----|----|----|----|\n| **Nominal** | Pie Chart, Bar Chart | Categories, Frequencies | Compares parts to the whole (pie) or shows counts (bar). |\n| **Ordinal** | Ordered Bar Chart, Dot Plot | Ranked Categories | Ordered bars or dots that reflect the ordinal nature of data. |\n| **Interval** | Histogram, Line Chart | Continuous Data (e.g., temperature) | Line chart shows changes over time; histogram shows distribution. |\n| **Ratio** | Scatter Plot, Histogram, Box Plot | Continuous Data with True Zero | Used for numerical data with meaningful zero. |\n\n## **3. Exploring Relationships Between Variables**\n\nThe following charts are commonly used to explore relationships between\ntwo or more variables:\n\n| **Type of Data** | **Chart Type** | **Best for** | **Description** |\n|----|----|----|----|\n| **Nominal vs Nominal** | Stacked Bar Chart, Grouped Bar Chart | Comparing two categories | Shows distribution of one nominal variable across levels of another. |\n| **Ordinal vs Ordinal** | Ordered Bar Chart, Stacked Bar Chart | Comparing two ranked categories | Displays trends in ordered categories. |\n| **Nominal/Ordinal vs Interval/Ratio** | Box Plot, Violin Plot | Comparing groups for continuous variables | Box plots show central tendency and spread; violin plots show distribution. |\n| **Interval vs Interval** | Scatter Plot, Line Chart | Correlation or relationship between two continuous variables | Scatter plots show correlation or pattern; line charts show trend over time. |\n| **Ratio vs Ratio** | Scatter Plot, Bubble Chart | Strength and direction of relationships | Scatter plots can show strength, direction, and outliers; bubble charts add size as a variable. |\n\n## **4. Trends Over Time**\n\nIf you are looking at trends over time for different data types,\nconsider the following:\n\n| **Data Type** | **Chart Type** | **Best for** | **Description** |\n|----|----|----|----|\n| **Interval/Ratio** | Line Chart | Continuous time-based data | Tracks changes over time (e.g., temperature, stock prices). |\n| **Nominal** | Stacked Line Chart, Stacked Bar Chart | Time-based categories | Shows changes in category proportions over time. |\n\n## **5. Comparing Distributions**\n\nWhen comparing the distribution of data between groups or categories,\nthe following charts are useful:\n\n| **Data Type** | **Chart Type** | **Best for** | **Description** |\n|----|----|----|----|\n| **Interval/Ratio** | Histogram, Box Plot | Distribution of continuous data across groups | Histograms show frequency; box plots show median and spread. |\n| **Nominal/Ordinal** | Bar Chart, Pie Chart | Comparing category proportions | Bar and pie charts compare categories' proportions. |\n\n## **6. Correlation and Regression**\n\nTo explore the correlation between two continuous variables or to\nvisualize a regression model:\n\n| **Type of Data** | **Chart Type** | **Best for** | **Description** |\n|----|----|----|----|\n| **Interval/Ratio** | Scatter Plot with Regression Line | Correlation or regression analysis | Scatter plots visualize relationships; a regression line adds a trend. |\n| **Nominal/Ordinal vs Interval/Ratio** | Faceted Scatter Plot, Box Plot | Comparing groups with continuous variables | Shows how groups differ based on continuous measures. |\n\n## **Self-Assessment Questions**\n\n1.  **What type of chart would you use to display the frequency of\n    different job titles (e.g., teacher, engineer, doctor)?**\n    -   ANSWER HERE\n2.  **How would you visualize the relationship between a person’s age\n    and their income?**\n    -   ANSWER HERE\n3.  **If you were comparing the median salary of employees across\n    different education levels (e.g., high school, bachelor’s,\n    master’s), which chart type would you use?**\n    -   ANSWER HERE\n4.  **Which chart would best show the distribution of exam scores in a\n    class?**\n    -   ANSWER HERE\n5.  **What chart would you use to see how sales numbers have changed\n    over the last 10 years?**\n    -   ANSWER HERE\n\nThis 'cheat' sheet should help you decide on the most appropriate charts\nfor exploring central tendency, different measurement types, and\nrelationships in their data. It also includes self-assessment questions\nto ensure you get a good grip of these concepts.\n\n## Histogram\n\n### Definition\n\nA histogram is an accurate graphical representation of the distribution\nof a numeric variable. It takes as input numeric variables only. The\nvariable is cut into several bins, and the number of observation per bin\nis represented by the height of the bar.\n\nHere is an example showing the distribution of the night price of Rbnb\napartments in the south of France. Price range is divided per 10 euros\ninterval. For example, there are slightly less than 750 appartements\nwith a night price between 100 and 110 euros:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Libraries\nlibrary(ggplot2)\n\n# Load dataset from github using base R\ndata <- read.table(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/1_OneNum.csv\", header=TRUE)\n\n# Ensure the data is in a proper data frame and filter\nfiltered_data <- subset(data, price < 300)\n\n# Create the histogram using ggplot2\nggplot(filtered_data, aes(x = price)) +\n  geom_histogram(breaks = seq(0, 300, 10), fill = \"#69b3a2\", color = \"#e9ecef\", alpha = 0.9) +\n  ggtitle(\"Night price distribution of Airbnb apartments\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-1-1.pdf){fig-align='center' fig-pos='H'}\n:::\n:::\n\n\n\n\n### What for\n\nHistograms are used to study the distribution of one or a few variables.\nChecking the distribution of your variables one by one is probably the\nfirst task you should do when you get a new dataset. It delivers a good\nquantity of information. Several distribution shapes exist, here is an\nillustration of the 6 most common ones:\n\n### Examples\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Libraries\nlibrary(ggplot2)\n\n# Build dataset with different distributions\ndata <- data.frame(\n  type = c(rep(\"edge peak\", 1000), rep(\"comb\", 1000), rep(\"normal\", 1000), rep(\"uniform\", 1000), rep(\"bimodal\", 1000), rep(\"skewed\", 1000)),\n  value = c(\n    rnorm(900), rep(3, 100),                            # edge peak\n    rnorm(360, sd = 0.5), rep(c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75), 80),  # comb\n    rnorm(1000),                                         # normal\n    runif(1000),                                         # uniform\n    rnorm(500, mean = -2), rnorm(500, mean = 2),         # bimodal\n    abs(log(rnorm(1000)))                                # skewed\n  )\n)\n\n# Represent it\nggplot(data, aes(x = value)) +\n  geom_histogram(fill = \"#69b3a2\", color = \"#e9ecef\", alpha = 0.9) +\n  facet_wrap(~ type, scales = \"free_x\") +\n  theme_minimal() +  # Replace hrbrthemes::theme_ipsum() with theme_minimal() from ggplot2\n  theme(\n    panel.spacing = unit(0.1, \"lines\"),\n    axis.title.x = element_blank(),\n    axis.text.x = element_blank(),\n    axis.ticks.x = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-2-1.pdf){fig-align='center' fig-pos='H'}\n:::\n:::\n\n\n\n\n### Useful for:\n\nChecking this distribution also helps you discovering mistakes in the\ndata. For example, the `comb` distribution can often denote a rounding\nthat has been applied to the variable or another mistake.\n\nAs a second step, histogram allow to compare the distribution of **a\nfew** variables. Don't compare more than 3 or 4, it would make the\nfigure cluttered and unreadable. This comparison can be done showing the\n2 variables on the same graphic and using transparency.\n\n### Example\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Libraries\nlibrary(ggplot2)\n\n# Build dataset with different distributions\ndata <- data.frame(\n  type = c(rep(\"variable 1\", 1000), rep(\"variable 2\", 1000)),\n  value = c(rnorm(1000), rnorm(1000, mean = 4))\n)\n\n# Represent it\nggplot(data, aes(x = value, fill = type)) +\n  geom_histogram(color = \"#e9ecef\", alpha = 0.6, position = \"identity\") +\n  scale_fill_manual(values = c(\"#69b3a2\", \"#404080\")) +\n  theme_minimal() +  # Replace hrbrthemes::theme_ipsum() with theme_minimal()\n  labs(fill = \"\")\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-3-1.pdf){fig-align='center' fig-pos='H'}\n:::\n:::\n\n\n\n\n### Variation\n\nA common variation of the histogram is the mirror histogram: it puts\nface to face 2 histograms to compare their distribution.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Libraries\nlibrary(ggplot2)\n\n# Build dataset\ndata <- data.frame(\n  x = rnorm(1000),\n  y = rnorm(1000, mean = 2)\n)\n\n# Represent it\nggplot(data) +\n  # First histogram for variable 'x'\n  geom_histogram(aes(x = x, y = ..density..), binwidth = diff(range(data$x)) / 30, fill = \"#69b3a2\") +\n  geom_label(aes(x = 4.8, y = 0.25, label = \"variable1\"), color = \"#69b3a2\") +\n  \n  # Second histogram for variable 'y' (flipped vertically)\n  geom_histogram(aes(x = y, y = -..density..), binwidth = diff(range(data$x)) / 30, fill = \"#404080\") +\n  geom_label(aes(x = 4.8, y = -0.25, label = \"variable2\"), color = \"#404080\") +\n  \n  # Replace hrbrthemes::theme_ipsum() with theme_minimal()\n  theme_minimal() +\n  \n  # Label the x-axis\n  xlab(\"value of x\")\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-4-1.pdf){fig-align='center' fig-pos='H'}\n:::\n:::\n\n\n\n\n### Common mistakes\n\n-   Try several bin sizes, it can lead to very different conclusions.\n-   Don't use weird color sheme. It does not give any more insight.\n-   Don't confound it with a barplot. A barplot gives a value for each\n    group of a categoric variable. Here, we have only a numeric variable\n    and we chack its distribution.\n-   Don't compare more than \\~3 groups in the same histogram. The\n    graphic gets cluttered and hardly understandable. Instead use a\n    violin plot, a boxplot, a ridgeline plot or use small multiple.\n-   Using unequal bin widths\n\n## Density Plot\n\n### Definition\nA density plot is a representation of the distribution of a numeric\nvariable. It uses a kernel density estimate to show the probability\ndensity function of the variable. It is a smoothed version of the\nhistogram and is used in the same concept.\n\nHere is an example showing the distribution of the night price of Rbnb\nappartements in the south of France:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Libraries\nlibrary(ggplot2)\n\n# Load dataset from github\ndata <- read.table(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/1_OneNum.csv\", header=TRUE)\n\n# Make the density plot\nfiltered_data <- subset(data, price < 300)\n\nggplot(filtered_data, aes(x = price)) +\n  geom_density(fill = \"#69b3a2\", color = \"#e9ecef\", alpha = 0.8) +\n  ggtitle(\"Night price distribution of Airbnb apartments\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-5-1.pdf){fig-align='center' fig-pos='H'}\n:::\n:::\n\n\n\n\n### What for\n\nDensity plots are used to study the distribution of one or a few\nvariables. Checking the distribution of your variables one by one is\nprobably the first task you should do when you get a new dataset. It\ndelivers a good quantity of information. Several distribution shapes\nexist, here is an illustration of the 6 most common ones:\n\n### Examples\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Libraries\nlibrary(ggplot2)\n\n# Build dataset with different distributions\ndata <- data.frame(\n  type = c(rep(\"edge peak\", 1000), rep(\"comb\", 1000), rep(\"normal\", 1000), rep(\"uniform\", 1000), rep(\"bimodal\", 1000), rep(\"skewed\", 1000)),\n  value = c(\n    rnorm(900), rep(3, 100),                            # edge peak\n    rnorm(360, sd = 0.5), rep(c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75), 80),  # comb\n    rnorm(1000),                                         # normal\n    runif(1000),                                         # uniform\n    rnorm(500, mean = -2), rnorm(500, mean = 2),         # bimodal\n    abs(log(rnorm(1000)))                                # skewed\n  )\n)\n\n# Represent it\nggplot(data, aes(x = value)) +\n  geom_density(fill = \"#69b3a2\", color = \"#e9ecef\", alpha = 0.9, adjust = 0.5) +\n  facet_wrap(~type, scales = \"free\") +  # Corrected 'scale' to 'scales'\n  theme_minimal() +  # Replace hrbrthemes::theme_ipsum() with theme_minimal()\n  theme(\n    panel.spacing = unit(0.1, \"lines\"),\n    axis.title.x = element_blank(),\n    axis.text.x = element_blank(),\n    axis.ticks.x = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-6-1.pdf){fig-align='center' fig-pos='H'}\n:::\n:::\n\n\n\n\n### Useful for:\n\nChecking this distribution also helps you discovering mistakes in the\ndata. For example, the `comb` distribution can often denote a rounding\nthat has been applied to the variable or another mistake.\n\nAs a second step, density plots allow to compare the distribution of **a\nfew** variables. Don't compare more than 3 or 4, it would make the\nfigure cluttered and unreadable. This comparison can be done showing the\n2 variables on the same graphic and using transparency.\n\n### Example\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Libraries\nlibrary(ggplot2)\n\n# Build dataset with different distributions\ndata <- data.frame(\n  type = c(rep(\"variable 1\", 1000), rep(\"variable 2\", 1000)),\n  value = c(rnorm(1000), rnorm(1000, mean = 4))\n)\n\n# Represent it\nggplot(data, aes(x = value, fill = type)) +\n  geom_density(color = \"#e9ecef\", alpha = 0.6) +\n  scale_fill_manual(values = c(\"#69b3a2\", \"#404080\")) +\n  theme_minimal() +  # Replacing hrbrthemes::theme_ipsum() with theme_minimal()\n  labs(fill = \"\")\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-7-1.pdf){fig-align='center' fig-pos='H'}\n:::\n:::\n\n\n\n\n### Variation\n\nA common variation of the density plot is the mirror density plot: it\nputs face to face 2 density plots to compare their distribution.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Libraries\nlibrary(ggplot2)\n\n# Build dataset\ndata <- data.frame(\n  x = rnorm(1000), \n  y = rnorm(1000, mean = 2)\n)\n\n# Represent it\nggplot(data) + \n  # First density for variable 'x'\n  geom_density(aes(x = x, y = ..density..), fill = \"#69b3a2\") + \n  geom_label(aes(x = 4.5, y = 0.25, label = \"variable1\"), color = \"#69b3a2\") +\n  \n  # Second density for variable 'y' (flipped vertically)\n  geom_density(aes(x = y, y = -..density..), fill = \"#404080\") +\n  geom_label(aes(x = 4.5, y = -0.25, label = \"variable2\"), color = \"#404080\") +\n  \n  # Replace hrbrthemes::theme_ipsum() with theme_minimal()\n  theme_minimal() +\n  \n  # Label for the x-axis\n  xlab(\"value of x\")\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-8-1.pdf){fig-align='center' fig-pos='H'}\n:::\n:::\n\n\n\n\n### Common mistakes\n\n-   Play with the bandwidth argument, it can lead to very different\n    conclusions.\n-   Don't compare more than \\~3 groups on the same density plot. The\n    graphic gets cluttered and hardly understandable. Instead use a\n    violin plot, a boxplot, a ridgeline plot or use small multiple.\n\n## Scatter Plot\n\n### Definition\n\nA scatterplot displays the relationship between 2 numeric variables. For\neach data point, the value of its first variable is represented on the X\naxis, the second on the Y axis.\n\nHere is an example considering the price of 1460 apartments and their\nground living area. This dataset comes from a Kaggle machine learning\ncompetition.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Libraries\nlibrary(ggplot2)\nlibrary(tidyverse)\n\n# Load dataset from github using base R\ndata <- read.table(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/2_TwoNum.csv\", \n                   header = TRUE, sep = \",\")[, c(\"GrLivArea\", \"SalePrice\")]\n\n# Plot\nggplot(data, aes(x = GrLivArea, y = SalePrice / 1000)) +\n  geom_point(color = \"#69b3a2\", alpha = 0.6) +\n  ggtitle(\"Ground living area partially explains sale price of apartments\") +\n  theme_minimal() +  # Replaced hrbrthemes::theme_ipsum() with theme_minimal()\n  theme(\n    plot.title = element_text(size = 12)\n  ) +\n  ylab('Sale price (k$)') +\n  xlab('Ground living area')\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-9-1.pdf){fig-align='center' fig-pos='H'}\n:::\n:::\n\n\n\n\n### What for\n\nA scatterplot is made to study the relationship between 2 variables.\nThus it is often accompanied by a correlation coefficient calculation,\nthat usually tries to measure the linear relationship.\n\nHowever other types of relationship can be detected using scatterplots,\nand a common task consists to fit a model explaining Y in function of X.\nHere are a few patterns you can detect doing a scatterplot.\n\n### Examples\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Libraries\nlibrary(ggplot2)\n\n# Create data\nd1 <- data.frame(x = seq(1, 100), y = rnorm(100), name = \"No trend\")\nd2 <- transform(d1, y = x * 10 + rnorm(100, sd = 60), name = \"Linear relationship\")\nd3 <- transform(d1, y = x^2 + rnorm(100, sd = 140), name = \"Square\")\nd4 <- data.frame(x = seq(1, 10, 0.1), y = sin(seq(1, 10, 0.1)) + rnorm(91, sd = 0.6), name = \"Sin\")\ndon <- do.call(rbind, list(d1, d2, d3, d4))\n\n# Plot\nggplot(don, aes(x = x, y = y)) +\n  geom_point(color = \"#69b3a2\", alpha = 0.8) +\n  theme_minimal() +  # Replacing hrbrthemes::theme_ipsum() with theme_minimal()\n  facet_wrap(~name, scales = \"free\")  # 'scale' should be 'scales' in facet_wrap()\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-10-1.pdf){fig-align='center' fig-pos='H'}\n:::\n:::\n\n\n\n\n### Useful for:\n\n-   Detecting relationships between two variables\n-   Identifying patterns or trends in data\n-   Spotting outliers or unusual data points\n-   Comparing different groups or categories within the data\n\n### Variation\n\nScatterplots are sometimes supported by marginal distributions. It\nindeed adds insight to the graphic, revealing the distribution of both\nvariables:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Libraries\nlibrary(ggplot2)\nlibrary(ggExtra)\nlibrary(tidyverse)\n\n# Load dataset from github using base R\ndata <- read.table(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/2_TwoNum.csv\", \n                   header = TRUE, sep = \",\")[, c(\"GrLivArea\", \"SalePrice\")]\n\n# Create a ggplot2 scatterplot\np <- data %>%\n  ggplot(aes(x = GrLivArea, y = SalePrice / 1000)) +\n  geom_point(color = \"#69b3a2\", alpha = 0.8) +\n  theme_minimal() +  # Replacing hrbrthemes::theme_ipsum() with theme_minimal()\n  theme(\n    legend.position = \"none\"\n  )\n\n# Add marginal histograms\nggMarginal(p, type = \"histogram\", color = \"grey\")\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-11-1.pdf){fig-align='center' fig-pos='H'}\n:::\n:::\n\n\n\n\n### Common mistakes\n\n-   Overplotting is the most common mistake when sample size is high.\n    There are about 10 different workarounds to fix this issue.\n-   Don't forget to show subgroups if you have some. Indeed it can\n    reveal important hidden patterns in your data, like in the case of\n    the Simpson paradox.\n\n\n## Histogram\n\n### Definition\n\nA barplot (or barchart) is one of the most common types of graphic. It\nshows the relationship between a numeric and a categoric variable. Each\nentity of the categoric variable is represented as a bar. The size of\nthe bar represents its numeric value.\n\nHere is an example showing the quantity of weapons exported by the top\n20 largest exporters in 2017:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Libraries\nlibrary(ggplot2)\n\n# Load dataset from github using base R\ndata <- read.table(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/7_OneCatOneNum.csv\", \n                   header = TRUE, sep = \",\")\n\n# Barplot\ndata %>%\n  filter(!is.na(Value)) %>%\n  arrange(Value) %>%\n  tail(20) %>%\n  mutate(Country = factor(Country, Country)) %>%\n  ggplot(aes(x = Country, y = Value)) +\n  geom_bar(stat = \"identity\", fill = \"#69b3a2\") +\n  coord_flip() +\n  theme_minimal() +  # Replacing hrbrthemes::theme_ipsum() with theme_minimal()\n  theme(\n    panel.grid.minor.y = element_blank(),\n    panel.grid.major.y = element_blank(),\n    legend.position = \"none\"\n  ) +\n  xlab(\"\") +\n  ylab(\"Weapon quantity (SIPRI trend-indicator value)\")\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-12-1.pdf){fig-align='center' fig-pos='H'}\n:::\n:::\n\n\n\n\n### What for\n\nA barplot shows the relationship between a numeric and a categoric\nvariable. In the previous graphic, each country is a level of the\ncategoric variable, and the quantity of weapon sold is the numeric\nvariable. An ordered barplot is a very good choice here since it\ndisplays both the ranking of countries and their specific value.\n\nA barplot can also display values for several levels of grouping. Here's\nan example of a grouped barplot:\n\n### Examples\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Libraries\nlibrary(ggplot2)\nlibrary(babynames)\n\n# Load dataset\ndata <- babynames %>%\n  filter(name %in% c(\"Ashley\", \"Amanda\", \"Jessica\", \"Patricia\", \"Linda\", \"Deborah\", \"Dorothy\", \"Betty\", \"Helen\")) %>%\n  filter(sex == \"F\")\n\n# A grouped barplot\ndata %>%\n  filter(name %in% c(\"Ashley\", \"Patricia\", \"Betty\", \"Helen\")) %>%\n  filter(year %in% c(1920, 1960, 2000)) %>%\n  mutate(year = as.factor(year)) %>%\n  ggplot(aes(x = year, y = n, fill = name)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  scale_fill_manual(values = c(\"#69b3a2\", \"#404080\", \"#ffcc00\", \"#ff5733\")) + # Custom colors instead of viridis\n  theme_minimal() +  # Replacing hrbrthemes::theme_ipsum() with theme_minimal()\n  ylab(\"Number of babies\")\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-13-1.pdf){fig-align='center' fig-pos='H'}\n:::\n:::\n\n\n\n\n### Useful for:\n\n-   Comparing values across categories\n-   Showing the distribution of a numeric variable for different groups\n-   Displaying rankings or ordered data\n-   Visualizing part-to-whole relationships (in stacked bar charts)\n\n### Variation\n\nLollipop plot: A variation that replaces bars with segments and dots,\nresulting in a less cluttered figure:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Libraries\nlibrary(ggplot2)\n\n# Load dataset from github\ndata <- read.table(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/7_OneCatOneNum.csv\", \n                   header = TRUE, sep = \",\")\n\n# Plot\ndata %>%\n  filter(!is.na(Value)) %>%\n  arrange(Value) %>%\n  mutate(Country = factor(Country, Country)) %>%\n  ggplot(aes(x = Country, y = Value)) +\n  geom_segment(aes(x = Country, xend = Country, y = 0, yend = Value), color = \"grey\") +\n  geom_point(size = 3, color = \"#69b3a2\") +\n  coord_flip() +\n  theme_minimal() +  # Replacing hrbrthemes::theme_ipsum() with theme_minimal()\n  theme(\n    panel.grid.minor.y = element_blank(),\n    panel.grid.major.y = element_blank(),\n    legend.position = \"none\"\n  ) +\n  xlab(\"\")\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-14-1.pdf){fig-align='center' fig-pos='H'}\n:::\n:::\n\n\n\n\nCircular barplot: Useful when you have many groups, though it sacrifices\nsome accuracy in comparison:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Libraries\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Load dataset from github\ndata <- read.table(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/7_OneCatOneNum.csv\", header=TRUE, sep=\",\")\n\n# Order data\ntmp <- data %>%\n  filter(!is.na(Value)) %>%\n  arrange(desc(Value)) %>%\n  mutate(Country = factor(Country, Country))\n\n# Set a number of 'empty bars'\nempty_bar = 10\n\n# Add empty bars to the dataset\nto_add <- matrix(NA, empty_bar, ncol(tmp))\ncolnames(to_add) <- colnames(tmp)\ntmp <- rbind(tmp, to_add)\ntmp$id <- seq(1, nrow(tmp))\n\n# Get the name and the y position of each label\nlabel_tmp <- tmp\nnumber_of_bar <- nrow(label_tmp)\nangle <- 90 - 360 * (label_tmp$id - 0.5) / number_of_bar  # Adjust angles for label positioning\nlabel_tmp$hjust <- ifelse(angle < -90, 1, 0)\nlabel_tmp$angle <- ifelse(angle < -90, angle + 180, angle)\nlabel_tmp$Country <- gsub(\"United States\", \"US\", label_tmp$Country)\nlabel_tmp$Country <- paste(label_tmp$Country, \" (\", label_tmp$Value, \")\", sep = \"\")\n\n# Make the plot\nggplot(tmp, aes(x = as.factor(id), y = Value)) +  # x is treated as a factor\n  geom_bar(stat = \"identity\", fill = alpha(\"#69b3a2\", 0.8)) +\n  ylim(-7000, 13000) +\n  theme_minimal() +\n  theme(\n    axis.text = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.margin = unit(rep(-1, 4), \"cm\")\n  ) +\n  coord_polar(start = 0) +  # Polar coordinates for a circular plot\n  geom_text(data = label_tmp, aes(x = id, y = Value + 200, label = Country), \n            color = \"black\", fontface = \"bold\", alpha = 0.6, size = 2.5, \n            angle = label_tmp$angle, hjust = label_tmp$hjust, inherit.aes = FALSE) +\n  geom_text(aes(x = 24, y = 8000, label = \"Who sells more weapons?\"), \n            color = \"black\", inherit.aes = FALSE, data = data.frame())\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-15-1.pdf){fig-align='center' fig-pos='H'}\n:::\n:::\n\n\n\n\n### Common mistakes\n\n-   Do not confound barchart with histogram. A histogram has only a\n    numeric variable as input and shows its distribution.\n-   Order your bars. If the levels of your categoric variable have no\n    obvious order, order the bars following their values.\n-   Several values per group? Don't use a barplot. Even with error bars,\n    it hides information and other types of graphics like boxplot or\n    violin are much more appropriate.\n\n\n## Line Chart\n\n### Definition\n\nA line chart or line graph displays the evolution of one or several\nnumeric variables. Data points are connected by straight line segments.\nIt is similar to a scatter plot except that the measurement points are\nordered (typically by their x-axis value) and joined with straight line\nsegments. A line chart is often used to visualize a trend in data over\nintervals of time – a time series – thus the line is often drawn\nchronologically.\n\nHere is an example showing the evolution of the bitcoin price between\nApril 2013 and April 2018:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Libraries\nlibrary(ggplot2)\n\n# Load dataset from github\ndata <- read.table(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv\", \n                   header = TRUE)\ndata$date <- as.Date(data$date)\n\n# Plot\nggplot(data, aes(x = date, y = value)) +\n  geom_line(color = \"#69b3a2\") +\n  ggtitle(\"Evolution of Bitcoin price\") +\n  ylab(\"Bitcoin price ($)\") +\n  theme_minimal() +  # Replacing hrbrthemes::theme_ipsum() with theme_minimal()\n  theme(\n    plot.title = element_text(size = 12)\n  )\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-16-1.pdf){fig-align='center' fig-pos='H'}\n:::\n:::\n\n\n\n\n### What for\n\nLine charts can be used to show the evolution of one or several\nvariables. Here is an example showing the evolution of three baby name\nfrequencies in the US between 1880 and 2015:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Libraries\nlibrary(ggplot2)\nlibrary(babynames)\n\n# Load dataset from babynames\ndon <- babynames %>%\n  filter(name %in% c(\"Ashley\", \"Patricia\", \"Helen\")) %>%\n  filter(sex == \"F\")\n\n# Plot\nggplot(don, aes(x = year, y = n, group = name, color = name)) +\n  geom_line() +\n  scale_color_manual(values = c(\"#69b3a2\", \"#404080\", \"#ffcc00\")) +  # Custom colors to replace viridis\n  ggtitle(\"Popularity of American names in the previous 30 years\") +\n  theme_minimal() +  # Replacing hrbrthemes::theme_ipsum() with theme_minimal()\n  ylab(\"Number of babies born\") +\n  theme(\n    plot.title = element_text(size = 12)\n  )\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-17-1.pdf){fig-align='center' fig-pos='H'}\n:::\n:::\n\n\n\n\n### Useful for:\n\n-   Visualizing trends over time\n-   Comparing multiple variables or categories over a continuous axis\n-   Showing the rate of change between data points\n-   Identifying patterns, cycles, or anomalies in data\n\n### Variation\n\nIf the number of data points is low, it is advised to represent each\nindividual observation with a dot:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Libraries\nlibrary(ggplot2)\n\n# Assuming `data` is already loaded and contains `date` and `value`\n# Using tail to get the last 10 entries for the plot\ndata %>%\n  tail(10) %>%\n  ggplot(aes(x = date, y = value)) +\n  geom_line(color = \"#69b3a2\") +\n  geom_point(color = \"#69b3a2\", size = 4) +\n  ggtitle(\"Line chart with points\") +\n  ylab(\"Bitcoin price ($)\") +\n  theme_minimal()  # Replacing hrbrthemes::theme_ipsum() with theme_minimal()\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-18-1.pdf){fig-align='center' fig-pos='H'}\n:::\n:::\n\n\n\n\nLines are also used to show trends in a scatterplot. Here is an example\nusing Smoothed conditional means and showing confidence interval around\nit:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Libraries\nlibrary(ggplot2)\n\n# Plot using the mpg dataset\nggplot(mpg, aes(displ, hwy)) +\n  geom_point() +\n  geom_smooth(color = \"#69b3a2\") +\n  theme_minimal()  \n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-19-1.pdf){fig-align='center' fig-pos='H'}\n:::\n:::\n\n\n\n\n### Common caveats\n\nThe line chart is subject to a lot of discussion concerning potential\ncaveats:\n\n-   To cut or not to cut the Y axis? Whether or not the Y axis must\n    start at 0 is a hot topic leading to intense debates. Generally,\n    line plots do not need to start at 0 since it allows observing\n    patterns more efficiently.\n\n\n## Line Chart\n\n### Common caveats\n\nThe line chart is subject to a lot of discussion concerning potential\ncaveats:\n\n-   To cut or not to cut the Y axis? Whether or not the Y axis must\n    start at 0 is a hot topic leading to intense debates. Generally,\n    line plots do not need to start at 0 since it allows observing\n    patterns more efficiently.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Libraries\nlibrary(ggplot2)\nlibrary(patchwork)\n\n# Create a small dataset with less dramatic changes\nset.seed(123)\nsmall_data <- data.frame(\n  date = seq(as.Date(\"2023-01-01\"), by = \"month\", length.out = 10),\n  value = 100 + cumsum(rnorm(10, mean = 0.5, sd = 1))\n)\n\n# Plot 1: Full context, no cutting\np1 <- small_data %>%\n  ggplot(aes(x = date, y = value)) +\n  geom_line(color = \"#69b3a2\") +\n  geom_point(color = \"#69b3a2\", size = 4) +\n  ggtitle(\"Not cutting (shows full context)\") +\n  ylab(\"Value\") +\n  theme_minimal() +  # Replacing hrbrthemes::theme_ipsum() with theme_minimal()\n  ylim(0, max(small_data$value))\n\n# Plot 2: Cutting y-axis to exaggerate differences\np2 <- small_data %>%\n  ggplot(aes(x = date, y = value)) +\n  geom_line(color = \"#69b3a2\") +\n  geom_point(color = \"#69b3a2\", size = 4) +\n  ggtitle(\"Cutting (exaggerates differences)\") +\n  ylab(\"Value\") +\n  theme_minimal() +  # Replacing hrbrthemes::theme_ipsum() with theme_minimal()\n  ylim(min(small_data$value) - 1, max(small_data$value) + 1)\n\n# Combine plots using patchwork\np1 + p2\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-20-1.pdf){fig-align='center' fig-pos='H'}\n:::\n:::\n\n\n\n\n-   If you need to compare the evolution of 2 different variables, avoid\n    using dual axis. Dual axis can show very different results depending\n    on what range you apply to the axis.\n-   Mind the spaghetti chart: too many lines make the chart unreadable.\n-   Think about the aspect ratio of the graphic, extreme ratios make the\n    chart unreadable.\n\n## Word Cloud\n\n### Definition\n\nA word cloud (also called tag cloud or weighted list) is a visual\nrepresentation of text data. Words are usually single words, and the\nimportance of each is shown with font size or color.\n\nHere is an example showing the most frequent words used by Nekfeu, a\nfamous French rapper, in a few of his songs:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Libraries\nlibrary(wordcloud)\n\n# Example data (random words with frequencies)\nwords <- c(\"data\", \"science\", \"AI\", \"Psychology\", \"learning\", \n           \"neural\", \"network\", \"SpenserReid\", \"model\", \"Hannibal\", \n           \"research\", \"statistics\", \"RStudio\", \"python\", \"visualization\")\n\nfrequencies <- c(10, 8, 15, 6, 12, 5, 7, 9, 11, 8, 10, 9, 6, 12, 7)\n\n# Create a word cloud\nset.seed(123)  # For reproducibility\nwordcloud(words = words, freq = frequencies, min.freq = 1,\n          scale = c(3, 0.5), colors = brewer.pal(8, \"Dark2\"),\n          random.order = FALSE, rot.per = 0.35)\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-21-1.pdf){fig-align='center' fig-pos='H'}\n:::\n:::\n\n\n\n\n### What for\n\nWord clouds are useful for:\n\n-   Quickly perceiving the most prominent terms\n-   Locating a term alphabetically to determine its relative prominence\n-   Creating visually appealing representations of text data\n\nThey are widely used in media and well understood by the public.\n\n### Useful for:\n\n-   Summarizing large amounts of text data\n-   Highlighting key themes or topics in a dataset\n-   Creating engaging visuals for presentations or reports\n-   Comparing word frequencies across different texts or sources\n\n### Example\n\nHere's an alternative representation using a lollipop plot, which\naddresses some of the limitations of word clouds:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Example data (random words with frequencies)\nwords <- c(\"data\", \"science\", \"AI\", \"Psychology\", \"learning\", \n           \"neural\", \"network\", \"SpenserReid\", \"model\", \"Hannibal\", \n           \"research\", \"statistics\", \"RStudio\", \"python\", \"visualization\")\n\nfrequencies <- c(10, 8, 15, 6, 12, 5, 7, 9, 11, 8, 10, 9, 6, 12, 7)\n\n# Create a data frame from the provided words and frequencies\nword_data <- data.frame(word = words, freq = frequencies)\n\n# Plot using ggplot2\nword_data %>%\n  mutate(word = factor(word, word)) %>%\n  ggplot(aes(x = word, y = freq)) +\n  geom_segment(aes(x = word, xend = word, y = 0, yend = freq), color = \"grey\") +\n  geom_point(size = 3, color = \"#69b3a2\") +\n  coord_flip() +\n  theme_minimal() +  # Replacing hrbrthemes::theme_ipsum() with theme_minimal()\n  theme(\n    panel.grid.minor.y = element_blank(),\n    panel.grid.major.y = element_blank(),\n    legend.position = \"none\"\n  ) +\n  xlab(\"\") +\n  ylab(\"Frequency\")\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-22-1.pdf){fig-align='center' fig-pos='H'}\n:::\n:::\n\n\n\n\n### Variation\n\nMany variations exist for word clouds:\n\n-   Different shapes, sometimes using the shape of an object related to\n    the topic\n-   Varying text orientation, font, size, and colors\n-   Interactive word clouds that change or provide additional\n    information on hover\n\n### Common mistakes\n\n-   Relying too heavily on word clouds for accurate data representation\n-   Ignoring the limitations of area as a metaphor for numeric values\n-   Not accounting for the bias created by longer words appearing larger\n-   Using word clouds when more precise visualizations (like bar charts\n    or lollipop plots) would be more appropriate\n-   Creating overly complex or cluttered word clouds that are difficult\n    to read or interpret\n\nWord clouds, while visually appealing, are often criticized for their\nlack of accuracy in conveying information. Consider using them primarily\nfor aesthetic purposes or in conjunction with more precise data\nvisualization methods.\n\n## Psychology Data from Year 1\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(ggplot2)\n\n# Load the dataset\ndata <- read.csv(\"materials/data/Y1W3_data.csv\")\n\n# Remove all NA values\ndata <- na.omit(data)\n\n# Create a bar chart for the 'DogCatBoth' variable\nggplot(data, aes(x = DogCatBoth)) +\n  geom_bar(fill = \"steelblue\", color = \"black\") +\n  theme_minimal() +\n  labs(title = \"Distribution of DogCatBoth Responses\",\n       x = \"Dog, Cat, or Both\",\n       y = \"Count\")\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-23-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# Create a bar chart for the 'InsectApocalypse' variable\nggplot(data, aes(x = InsectApocalypse)) +\n  geom_bar(fill = \"darkgreen\", color = \"black\") +\n  theme_minimal() +\n  labs(title = \"Distribution of Insect Apocalypse Responses\",\n       x = \"Insect Apocalypse Belief\",\n       y = \"Count\")\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-23-2.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# Create a bar chart for the 'LarkorOwl' variable\nggplot(data, aes(x = LarkorOwl)) +\n  geom_bar(fill = \"purple\", color = \"black\") +\n  theme_minimal() +\n  scale_x_discrete(labels = function(x) substr(x, 1, 4)) +\n  labs(title = \"Distribution of Lark or Owl Responses\",\n       x = \"\",\n       y = \"Count\")\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-23-3.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# Count for each column\ncat(\"Count for DogCatBoth: \", sum(!is.na(data$DogCatBoth)), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCount for DogCatBoth:  39 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Count for InsectApocalypse: \", sum(!is.na(data$InsectApocalypse)), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCount for InsectApocalypse:  39 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Count for LarkorOwl: \", sum(!is.na(data$LarkorOwl)), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCount for LarkorOwl:  39 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required libraries\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(scales)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'scales'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:purrr':\n\n    discard\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:readr':\n\n    col_factor\n```\n\n\n:::\n\n```{.r .cell-code}\n# Read the data\ndata <- read.csv(\"materials/data/Y1W3_data.csv\")\n\n# Select relevant columns and remove rows with NA\ntipi_data <- data %>%\n  select(LarkorOwl, E_TIPI, A_TIPI, C_TIPI, ES_TIPI, O_TIPI) %>%\n  na.omit()\n\n# Shorten labels to Lark and Owl\ntipi_data$LarkorOwl <- ifelse(grepl(\"Lark\", tipi_data$LarkorOwl), \"Lark\", \"Owl\")\n\n# Reshape the data for radar plot\nradar_data <- tipi_data %>%\n  gather(key = \"Trait\", value = \"Score\", -LarkorOwl) %>%\n  mutate(Trait = factor(Trait, levels = c(\"E_TIPI\", \"A_TIPI\", \"C_TIPI\", \"ES_TIPI\", \"O_TIPI\")))\n\n# Calculate mean scores for each trait by Lark/Owl preference\nmean_scores <- radar_data %>%\n  group_by(LarkorOwl, Trait) %>%\n  summarize(Mean_Score = mean(Score)) %>%\n  ungroup()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'LarkorOwl'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Create a function to generate coordinates for the radar chart\ncoord_radar <- function(theta = \"x\", start = 0, direction = 1) {\n  theta <- match.arg(theta, c(\"x\", \"y\"))\n  r <- if (theta == \"x\") \"y\" else \"x\"\n  ggproto(\"CordRadar\", CoordPolar, theta = theta, r = r,\n          start = start, direction = sign(direction),\n          is_linear = function(coord) TRUE)\n}\n\n# Create the radar plot\nradar_plot <- ggplot(mean_scores, aes(x = Trait, y = Mean_Score, group = LarkorOwl, color = LarkorOwl)) +\n  geom_polygon(aes(fill = LarkorOwl), alpha = 0.25) +\n  geom_line(size = 1) +\n  geom_point(size = 3) +\n  scale_y_continuous(limits = c(0, 5), breaks = seq(0, 5, 1)) +\n  scale_color_manual(values = c(\"Lark\" = \"#FF6B6B\", \"Owl\" = \"#4ECDC4\")) +\n  scale_fill_manual(values = c(\"Lark\" = \"#FF6B6B\", \"Owl\" = \"#4ECDC4\")) +\n  coord_radar() +\n  facet_wrap(~ LarkorOwl, ncol = 2) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(size = 10),\n    axis.text.y = element_blank(),\n    axis.title = element_blank(),\n    panel.grid.major = element_line(color = \"gray\", size = 0.3),\n    panel.grid.minor = element_blank(),\n    legend.position = \"none\"\n  ) +\n  labs(title = \"TIPI Trait Scores by Lark/Owl Preference\",\n       subtitle = \"E: Extraversion, A: Agreeableness, C: Conscientiousness, ES: Emotional Stability, O: Openness\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\ni Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\ni Please use the `linewidth` argument instead.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Display the plot\nprint(radar_plot)\n```\n\n::: {.cell-output-display}\n![](ds5_files/figure-pdf/unnamed-chunk-24-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# Save the plot as a PNG file\nggsave(\"tipi_radar_plots.png\", radar_plot, width = 12, height = 6, dpi = 300)\n```\n:::\n",
    "supporting": [
      "ds5_files/figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}