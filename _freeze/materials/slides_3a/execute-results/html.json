{
  "hash": "14e7a58d7119b10b98fb2019216593d6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Intro to Data Visualisation II\"\nauthor: \"Dr. Gordon Wright\"\nengine: knitr\n\nformat: \n  revealjs: \n    slide-number: c/t\n    controls-layout: bottom-right\n    embed-resources: true\n    scrollable: true\n    code-overflow: wrap\n    code-line-numbers: true\n    code-copy: true\n    theme: [simple, slides.scss]\n    reference-location: document\n    footer: \"Data Visualisation II\"\nwebr:\n  packages: ['ggplot2', 'dplyr', 'tidyr'] # Install R packages on document open\n# autoload-packages: false       # Disable automatic loading of packages\nshow-startup-message: false    # Disable displaying status of webR initialization\nfilters:\n- webr\n---\n\n\n\n## Introduction to Data Types\n\nIn statistics, we work with various types of data. Understanding these types is crucial for:\n\n-   Choosing appropriate statistical methods\n-   Interpreting results correctly\n-   Making informed decisions based on data\n\nLet's explore the four main levels of measurement...\n\n::: notes\nEmphasize the importance of understanding data types for statistical analysis.\n:::\n\n## Nominal Data \n\n-   **Definition**: Categories or groups without intrinsic order\n-   **Characteristics**:\n    -   Cannot be ordered\n    -   No numerical value\n    -   Only shows distinct groups\n-   **Examples from our dataset**:\n    -   MBTI (Myers-Briggs Type Indicator)\n    -   Coin (Heads or Tails)\n    -   DogCatBoth (Preference for pets)\n\n::: notes\nExplain that nominal data is qualitative and used for labeling variables without any quantitative value.\n:::\n\n## Ordinal Data\n\n-   **Definition**: Categories with a meaningful order, but differences aren't measurable\n-   **Characteristics**:\n    -   Can be ordered\n    -   Intervals between ranks aren't necessarily equal\n-   **Examples from our dataset**:\n    -   1-7 rating scales (Likert scale responses)\n    -   TIPI scores (Big Five - OCEAN)\n\n::: notes\nHighlight that ordinal data has an order, but the distance between categories is not uniform or meaningful.\n:::\n\n## Interval Data\n\n-   **Definition**: Numerical data with consistent intervals, but no true zero point\n-   **Characteristics**:\n    -   Ordered with equal intervals between values\n    -   Can be added or subtracted\n    -   No true zero point\n-   **Examples**:\n    -   Temperature in Celsius or Fahrenheit\n    -   Calendar years\n\n::: notes\nExplain that interval data allows for degree of difference, but not ratio comparisons.\n:::\n\n## Ratio Data\n\n-   **Definition**: Numerical data with equal intervals and a true zero point\n-   **Characteristics**:\n    -   Ordered with equal intervals\n    -   Has a true zero point (absence of the variable is possible)\n    -   Can be added, subtracted, multiplied, and divided\n-   **Examples from our dataset**:\n    -   LoginCount\n    -   CompTime (assuming it's recorded in minutes)\n    -   EyeContact (assuming it's a continuous measure)\n\n::: notes\nEmphasize that ratio data allows for all arithmetic operations and comparisons.\n:::\n\n## Summary of Data Types\n\n| Data Type | Can Be Ordered? | Equal Intervals? | True Zero Point? | Example |\n|---------------|---------------|---------------|---------------|---------------|\n| Nominal | No | No | No | Gender, MBTI |\n| Ordinal | Yes | No | No | Scale measures, TIPI scores |\n| Interval | Yes | Yes | No | Temperature (Â°C) |\n| Ratio | Yes | Yes | Yes | LoginCount, CompTime |\n\n::: notes\nReview the key differences between the four levels of measurement.\n:::\n\n## Practical Application\n\nLet's look at some variables from our dataset:\n\n```{webr-r}\n# Load data (assuming it's available in the webr environment)\ndata <- read.csv(\"materials/data/Y1W3_data.csv\")\n\n# Display column names and data types\nstr(data, give.attr = FALSE)\n```\n\n::: notes\nExplain how to identify the data type of each variable and why it matters for analysis.\n:::\n\n## Conclusion and Next Steps\n\n-   Understanding data types is crucial for proper statistical analysis\n-   In our dataset, we have a mix of nominal, ordinal, and ratio data\n-   Next, we'll explore how to summarize and visualize these different types of data\n\n::: notes\nSummarize the key points about data types and preview the next part of the lecture.\n:::\n\n## Introduction to Measures of Central Tendency\n\nMeasures of central tendency help us understand the typical or central value in a dataset. The three main measures are:\n\n1.  Mean\n2.  Median\n3.  Mode\n\nLet's explore each of these using our dataset...\n\n::: notes\nExplain that these measures help summarize data and provide a \"typical\" value.\n:::\n\n## Mean\n\n-   **Definition**: The average of all values in a dataset\n-   **Formula**: $\\bar{x} = \\frac{\\sum{X}}{N}$\n-   **Best for**: Interval and ratio data\n-   **Example**: Let's calculate the mean LoginCount\n\n```{webr-r}\ndata <- read.csv(\"Y1W3_data.csv\")\nmean_login <- mean(data$LoginCount, na.rm = TRUE)\ncat(\"Mean LoginCount:\", round(mean_login, 2))\n```\n\n::: notes\nExplain that the mean is sensitive to outliers and works best with symmetric distributions.\n:::\n\n## Median\n\n-   **Definition**: The middle value when data is ordered\n-   **Best for**: Ordinal, interval, and ratio data\n-   **Example**: Let's find the median LoginCount\n\n```{webr-r}\nmedian_login <- median(data$LoginCount, na.rm = TRUE)\ncat(\"Median LoginCount:\", median_login)\n```\n\n::: notes\nHighlight that the median is less affected by outliers than the mean.\n:::\n\n## Mode\n\n-   **Definition**: The most frequently occurring value\n-   **Best for**: Any type of data, especially nominal\n-   **Example**: Let's find the mode of DogCatBoth\n\n```{webr-r}\nmode_pets <- names(sort(table(data$DogCatBoth), decreasing = TRUE))[1]\ncat(\"Mode of DogCatBoth:\", mode_pets)\n```\n\n::: notes\nExplain that mode is the only measure of central tendency for nominal data.\n:::\n\n## Comparing Measures of Central Tendency\n\nLet's compare these measures for LoginCount:\n\n```{webr-r}\ncat(\"Mean LoginCount:\", round(mean_login, 2), \"\\n\")\ncat(\"Median LoginCount:\", median_login, \"\\n\")\ncat(\"Mode LoginCount:\", as.numeric(names(sort(table(data$LoginCount), decreasing = TRUE)[1])))\n```\n\n::: notes\nDiscuss what these differences might tell us about the distribution of LoginCount.\n:::\n\n## Introduction to Measures of Variance\n\nMeasures of variance help us understand the spread or dispersion of data. Key measures include:\n\n1.  Range\n2.  Interquartile Range (IQR)\n3.  Variance\n4.  Standard Deviation\n\n::: notes\nExplain that these measures complement central tendency by showing how spread out the data is.\n:::\n\n## Range and Interquartile Range (IQR)\n\n-   **Range**: Difference between the maximum and minimum values\n-   **IQR**: Range of the middle 50% of the data\n\nLet's calculate these for LoginCount:\n\n```{webr-r}\nlogin_range <- range(data$LoginCount, na.rm = TRUE)\nlogin_iqr <- IQR(data$LoginCount, na.rm = TRUE)\n\ncat(\"Range of LoginCount:\", login_range[2] - login_range[1], \"\\n\")\ncat(\"IQR of LoginCount:\", login_iqr)\n```\n\n::: notes\nExplain that range is sensitive to outliers, while IQR is more robust.\n:::\n\n## Variance and Standard Deviation\n\n-   **Variance**: Average squared deviation from the mean\n-   **Standard Deviation**: Square root of the variance\n\nLet's calculate these for LoginCount:\n\n```{webr-r}\nlogin_var <- var(data$LoginCount, na.rm = TRUE)\nlogin_sd <- sd(data$LoginCount, na.rm = TRUE)\n\ncat(\"Variance of LoginCount:\", round(login_var, 2), \"\\n\")\ncat(\"Standard Deviation of LoginCount:\", round(login_sd, 2))\n```\n\n::: notes\nExplain that standard deviation is in the same units as the original data, making it easier to interpret.\n:::\n\n## Interpreting Standard Deviation\n\n-   In a normal distribution:\n    -   About 68% of data falls within 1 SD of the mean\n    -   About 95% falls within 2 SD\n    -   About 99.7% falls within 3 SD\n\nLet's visualize this for LoginCount:\n\n```{webr-r}\nlibrary(ggplot2)\n\nggplot(data, aes(x = LoginCount)) +\n  geom_histogram(binwidth = 5, fill = \"skyblue\", color = \"black\") +\n  geom_vline(xintercept = mean_login, color = \"red\", linetype = \"dashed\") +\n  geom_vline(xintercept = mean_login + c(-1, 1) * login_sd, color = \"green\", linetype = \"dashed\") +\n  geom_vline(xintercept = mean_login + c(-2, 2) * login_sd, color = \"blue\", linetype = \"dashed\") +\n  labs(title = \"Distribution of LoginCount with SD\", x = \"LoginCount\", y = \"Frequency\") +\n  theme_minimal()\n```\n\n::: notes\nExplain how to interpret this visualization and what it tells us about the spread of LoginCount.\n:::\n\n## Application to Different Data Types\n\nLet's apply these concepts to different types of data in our dataset:\n\n```{webr-r}\n# For ratio data (LoginCount)\ncat(\"LoginCount (Ratio):\\n\")\ncat(\"Mean:\", round(mean(data$LoginCount, na.rm = TRUE), 2), \"\\n\")\ncat(\"SD:\", round(sd(data$LoginCount, na.rm = TRUE), 2), \"\\n\\n\")\n\n# For ordinal data (Q_Scale)\ncat(\"Q_Scale (Ordinal):\\n\")\ncat(\"Median:\", median(data$Q_Scale, na.rm = TRUE), \"\\n\")\ncat(\"IQR:\", IQR(data$Q_Scale, na.rm = TRUE), \"\\n\\n\")\n\n# For nominal data (DogCatBoth)\ncat(\"DogCatBoth (Nominal):\\n\")\nprint(table(data$DogCatBoth))\n```\n\n::: notes\nDiscuss how the choice of measure depends on the type of data, and how to interpret these results.\n:::\n\n## Conclusion and Next Steps\n\n-   Measures of central tendency and variance provide crucial summaries of our data\n-   The choice of measure depends on the type of data and the shape of its distribution\n-   These measures form the basis for more advanced statistical analyses\n-   Next, we'll explore how to visualize these concepts and dive deeper into our dataset\n\n::: notes\nSummarize the key points about central tendency and variance, and preview the next part on data visualization.\n:::\n\n## Introduction to Data Exploration\n\nData exploration involves:\n\n-   Visualizing data distributions\n-   Identifying patterns and relationships\n-   Detecting outliers and anomalies\n\nWe'll use various chart types to explore our dataset.\n\n::: notes\nExplain the importance of data exploration in understanding the dataset before applying more advanced statistical techniques.\n:::\n\n## Histogram: Login Count Distribution\n\n```{webr-r}\nlibrary(ggplot2)\nlibrary(dplyr)\n\ndata <- read.csv(\"Y1W3_data.csv\")\n\nggplot(data, aes(x = LoginCount)) +\n  geom_histogram(binwidth = 5, fill = \"skyblue\", color = \"black\") +\n  labs(title = \"Distribution of Login Counts\",\n       x = \"Login Count\",\n       y = \"Frequency\") +\n  theme_minimal()\n```\n\n::: notes\nDiscuss the shape of the distribution, any skewness, and what it tells us about student engagement.\n:::\n\n## Bar Chart: Pet Preferences\n\n```{webr-r}\nggplot(data, aes(x = DogCatBoth)) +\n  geom_bar(fill = \"lightgreen\") +\n  labs(title = \"Preference for Dogs, Cats, or Both\",\n       x = \"Preference\",\n       y = \"Count\") +\n  theme_minimal()\n```\n\n::: notes\nInterpret the bar chart, discussing the most common preference and potential implications for student engagement strategies.\n:::\n\n## Scatter Plot: Eye Contact vs Login Count\n\n```{webr-r}\nggplot(data, aes(x = LoginCount, y = EyeContact)) +\n  geom_point(alpha = 0.7) +\n  labs(title = \"Eye Contact Score vs Login Count\",\n       x = \"Login Count\",\n       y = \"Eye Contact Score\") +\n  theme_minimal()\n```\n\n::: notes\nDiscuss any visible patterns or correlations, and what they might imply about the relationship between online engagement and social comfort.\n:::\n\n## Box Plot: Completion Time by Conscientiousness\n\n```{webr-r}\ndata$C_Group <- ifelse(data$C_TIPI > median(data$C_TIPI, na.rm = TRUE), \"High\", \"Low\")\n\nggplot(data, aes(x = C_Group, y = as.numeric(as.period(hms(CompTime))) / 60)) +\n  geom_boxplot() +\n  labs(title = \"Completion Time by Conscientiousness Level\",\n       x = \"Conscientiousness Level\",\n       y = \"Completion Time (minutes)\") +\n  theme_minimal()\n```\n\n::: notes\nInterpret the box plot, discussing differences in completion time between high and low conscientiousness groups.\n:::\n\n## Radar Chart: TIPI Personality Traits\n\n```{webr-r}\nlibrary(tidyr)\n\ntipi_data <- data %>%\n  select(E_TIPI, A_TIPI, C_TIPI, ES_TIPI, O_TIPI) %>%\n  summarise(across(everything(), mean, na.rm = TRUE)) %>%\n  pivot_longer(cols = everything(), names_to = \"Trait\", values_to = \"Score\")\n\nggplot(tipi_data, aes(x = Trait, y = Score, group = 1)) +\n  geom_polygon(fill = \"lightblue\", alpha = 0.5) +\n  geom_line() +\n  geom_point() +\n  coord_polar() +\n  ylim(0, 5) +\n  labs(title = \"Average TIPI Scores\") +\n  theme_minimal()\n```\n\n::: notes\nExplain how to interpret the radar chart and discuss the overall personality profile of the class based on TIPI scores.\n:::\n\n## MBTI Distribution\n\n```{webr-r}\nmbti_data <- data %>%\n  filter(!is.na(MBTI)) %>%\n  count(MBTI) %>%\n  arrange(desc(n))\n\nggplot(mbti_data, aes(x = reorder(MBTI, -n), y = n)) +\n  geom_bar(stat = \"identity\", fill = \"coral\") +\n  labs(title = \"Distribution of MBTI Types\",\n       x = \"MBTI Type\",\n       y = \"Count\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: notes\nDiscuss the distribution of MBTI types in the class and potential implications for teaching strategies.\n:::\n\n## Correlation Heatmap: TIPI Traits\n\n```{webr-r}\nlibrary(reshape2)\n\ntipi_cor <- data %>%\n  select(E_TIPI, A_TIPI, C_TIPI, ES_TIPI, O_TIPI) %>%\n  cor(use = \"pairwise.complete.obs\")\n\ntipi_cor_melted <- melt(tipi_cor)\n\nggplot(tipi_cor_melted, aes(x = Var1, y = Var2, fill = value)) +\n  geom_tile() +\n  scale_fill_gradient2(low = \"blue\", high = \"red\", mid = \"white\", midpoint = 0) +\n  labs(title = \"Correlation Heatmap of TIPI Traits\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: notes\nInterpret the correlation heatmap, discussing which personality traits tend to be related and which are more independent.\n:::\n\n## Exploring Relationships: LoginCount and TIPI Traits\n\n```{webr-r}\ntipi_login_cor <- data %>%\n  select(LoginCount, E_TIPI, A_TIPI, C_TIPI, ES_TIPI, O_TIPI) %>%\n  cor(use = \"pairwise.complete.obs\")\n\ntipi_login_cor_melted <- melt(tipi_login_cor)\n\nggplot(tipi_login_cor_melted, aes(x = Var1, y = Var2, fill = value)) +\n  geom_tile() +\n  scale_fill_gradient2(low = \"blue\", high = \"red\", mid = \"white\", midpoint = 0) +\n  labs(title = \"Correlation: LoginCount and TIPI Traits\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: notes\nDiscuss any notable correlations between login count and personality traits, and what this might imply about online engagement.\n:::\n\n## Violin Plot: EyeContact by MBTI Extraversion/Introversion\n\n```{webr-r}\ndata$IE <- substr(data$MBTI, 1, 1)\n\nggplot(data, aes(x = IE, y = EyeContact, fill = IE)) +\n  geom_violin(trim = FALSE) +\n  geom_boxplot(width = 0.1, fill = \"white\") +\n  labs(title = \"EyeContact Score by Extraversion/Introversion\",\n       x = \"MBTI Extraversion/Introversion\",\n       y = \"EyeContact Score\") +\n  theme_minimal()\n```\n\n::: notes\nInterpret the violin plot, discussing differences in eye contact scores between extraverts and introverts.\n:::\n\n## Stacked Bar Chart: MBTI Types by Pet Preference\n\n```{webr-r}\nmbti_pet <- data %>%\n  filter(!is.na(MBTI) & !is.na(DogCatBoth)) %>%\n  count(MBTI, DogCatBoth) %>%\n  group_by(MBTI) %>%\n  mutate(prop = n / sum(n))\n\nggplot(mbti_pet, aes(x = MBTI, y = prop, fill = DogCatBoth)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"MBTI Types by Pet Preference\",\n       x = \"MBTI Type\",\n       y = \"Proportion\",\n       fill = \"Pet Preference\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: notes\nDiscuss any interesting patterns in pet preferences across MBTI types and potential implications for understanding student personalities.\n:::\n\n## Conclusion and Key Insights\n\n-   Recap the main findings from our data exploration\n-   Discuss how these insights can inform teaching strategies and student engagement\n-   Highlight the importance of data-driven decision making in education\n\n::: notes\nSummarize the key takeaways from the data exploration and how they can be applied in the educational context.\n:::\n\n## Next Steps\n\n-   Encourage further exploration of the dataset\n-   Discuss potential research questions that could be investigated\n-   Introduce more advanced statistical techniques for future analysis\n\n::: notes\nProvide direction for students to continue their statistical journey and apply these concepts to their own research interests.\n:::\n\n## **Platoâs Triad: The True, The Good, and The Beautiful**\n\nPlato believed in the intrinsic connection between **truth**, **goodness**, and **beauty** â a concept that has influenced Western thought for centuries.\n\nFor Plato, these three qualities are inseparable in the realm of **Forms**.\n\nThe **truth** is inherently **good**, and what is **good** is also inherently **beautiful**.\n\nThus, if something is **false**, it cannot be truly **beautiful** or **good**.\n\n## Financial Times\n\n[Visual Vocabulary](https://ft-interactive.github.io/visual-vocabulary/) is a site for stuff \\## Introduction\n\n> \"Far better an approximate answer to the right question, which is often vague, than an exact answer to the wrong question, which can always be made precise.\" ---John W. Tukey\n\n-   Descriptive statistics are tools for describing data\n-   There are many ways to describe data\n-   Choose the most useful way for your data\n-   Describing data is necessary because there's usually too much of it\n\n------------------------------------------------------------------------\n\n## Too Many Numbers\n\n-   Example: Asking thousands of people about their happiness\n-   Raw data is overwhelming and difficult to interpret\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|     |     |     |     |     |     |     |      |     |     |\n|----:|----:|----:|----:|----:|----:|----:|-----:|----:|----:|\n|  694|  766|  781|  279|  145|  386| -155|    59|  347|  -72|\n|  743|  695| -907|  121|  180|  730|  744| -1057|   -8|  745|\n|  124|  236|  147|   26|  523|   27|  436|   -86| -483|  293|\n| -148|  -94|  -47|  737| -639|   37| -200|   313|  679| -261|\n| 1315| -200|  266| -929|  145| -413|  349|  -159| -657| -287|\n\n\n:::\n:::\n\n\n\n------------------------------------------------------------------------\n\n[From Data to Viz website](https://www.data-to-viz.com/)\n\n[Quarto Publishing System](https://quarto.org/)\n\n## What do you currently use?\n\n**How do you write your essays or lab reports?**\n\n-   Microsoft Word?\n\n-   Google Docs?\n\n-   Markdown?\n\n::: fragment\n**How do you currently play with numbers?**\n\n-   Excel?\n\n-   SPSS?\n\n-   R?\n\n-   Python?\n:::\n\n## What is Quarto?\n\nQuarto is an open-source scientific and technical publishing system [that allows you to combine text, images, code, plots, and tables in a fully-reproducible document.]{.fragment}\n\n<br>\n\n[Quarto has support for multiple languages including R, Python, Julia, and Observable.]{.fragment}\n\n<br>\n\n[It also works for a range of output formats such as PDFs, HTML documents, websites, presentations,...]{.fragment}\n\n## Why use Quarto? Why use R?\n\n-   More journals require code to be submitted (for transparency and reproducibility). Keeping the code with the paper makes this easier.\n\n-   Copying and pasting is tedious (and a great source of accidental errors).\n\n-   If you fix an error in code or data, the results and figures in the paper update automatically.\n\n-   Easy to share publicly.\n\n-   Open source so anyone can use it.\n\n## What about R Markdown?\n\nR Markdown isn't going anywhere but...\n\n-   Quarto has better multi-language support\n\n-   More user-friendly\n\n-   Better control of the output layouts\n\n# Your first Quarto document {background-color=\"#D9DBDB\"}\n\n## Creating a document\n\n<p style=\"text-align:center;\">\n\n<img src=\"images/new_doc.gif\" alt=\"Gif of creating a new quarto document\" width=\"50%\"/>\n\n</p>\n\n## Quarto in RStudio\n\n::::: columns\n::: column\n**Source editor**\n\n![](images/source.png){fig-align=\"center\" width=\"70%\"}\n:::\n\n::: column\n**Visual editor**\n\n![](images/visual.png){fig-align=\"center\" width=\"70%\"}\n:::\n:::::\n\n## Rendering a document\n\nWithin RStudio IDE: click **Render** (or Ctrl+Shift+K)\n\n. . .\n\n<br>\n\nUsing {quarto}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(quarto)\nquarto_render(\"document.qmd\")\n```\n:::\n\n\n\n. . .\n\n<br>\n\nUsing the command line\n\n``` bash\nquarto render document.qmd\n```\n\n## What makes a Quarto document?\n\nYAML header\n\n``` yaml\n---\ntitle: \"A very cool title\"\nformat: html\n---\n```\n\n. . .\n\nContent\n\n-   Text, links, images\n\n-   Code, tables, plots\n\n-   Equations, references\n\n## Output types\n\n::: incremental\n-   Documents: HTML, PDF, MS Word, Markdown\n\n-   Presentations: Revealjs, PowerPoint, Beamer\n\n-   Websites\n\n-   Books\n\n-   ...\n:::\n\n## Looking at Data: Graphs\n\n### Scatter Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides_3a_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n\n------------------------------------------------------------------------\n\n## Looking at Data: Histograms\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides_3a_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n\n-   Shows the distribution of data\n-   Reveals shape, center, and spread\n\n------------------------------------------------------------------------\n\n## Important Ideas\n\n1.  Distribution\n2.  Central Tendency\n3.  Variance\n\n------------------------------------------------------------------------\n\n## Measures of Central Tendency\n\n1.  Mode\n2.  Median\n3.  Mean\n\n------------------------------------------------------------------------\n\n## Mode\n\n-   Most frequently occurring number\n-   Example: 1, 1, 1, 2, 3, 4, 5, 6\n-   Mode = 1\n\n------------------------------------------------------------------------\n\n## Median\n\n-   Middle value when data is ordered\n-   Example: 1, 3, 4, **5**, 6, 7, 9\n-   Median = 5\n\n------------------------------------------------------------------------\n\n## Mean\n\n$Mean = \\bar{X} = \\frac{\\sum_{i=1}^{n} x_{i}}{N}$\n\n-   Sum of all values divided by the number of values\n-   Represents the \"average\"\n\n------------------------------------------------------------------------\n\n## Measures of Variation\n\n1.  Range\n2.  Variance\n3.  Standard Deviation\n\n------------------------------------------------------------------------\n\n## Range\n\n-   Minimum and maximum values\n-   Example: 1, 3, 4, 5, 5, 6, 7, 8, 9, 24\n-   Range: 1 to 24\n\n------------------------------------------------------------------------\n\n## Variance\n\n$variance = \\frac{\\text{Sum of squared difference scores}}{\\text{Number of Scores}}$\n\n-   Measures spread of data around the mean\n\n------------------------------------------------------------------------\n\n## Standard Deviation\n\n$\\text{standard deviation} = \\sqrt{\\frac{\\sum_{i}^{n}({x_{i}-\\bar{x})^2}}{N}}$\n\n-   Square root of variance\n-   In same units as original data\n\n------------------------------------------------------------------------\n\n## Using Descriptive Statistics\n\n-   Reduce large datasets to summary statistics\n-   Combine with graphical representations\n-   Be aware of limitations (e.g., Anscombe's Quartet)\n\n------------------------------------------------------------------------\n\n## Anscombe's Quartet\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides_3a_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n\n-   Same descriptive statistics, different patterns\n\n------------------------------------------------------------------------\n\n## Remember\n\n-   Always look at your data\n-   Combine descriptive statistics with visualizations\n-   Be aware of potential hidden patterns",
    "supporting": [
      "slides_3a_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}